# Server Configuration
NODE_ENV=development
PORT=3010

# Supabase Configuration
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# Redis Configuration
# Option 1: Use REDIS_URL
REDIS_URL=redis://localhost:6379

# Option 2: Use separate variables
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password
REDIS_TOKEN=your-redis-token

# Upstash Redis (Cloud)
UPSTASH_REDIS_REST_URL=https://your-region.upstash.io
UPSTASH_REDIS_REST_TOKEN=your-upstash-token

# Authentication & URLs
API_URL=http://localhost:3010
APP_REDIRECT_URL=http://localhost:3000
POST_LOGOUT_REDIRECT_URL=http://localhost:3000
FRONTEND_URL=http://localhost:3000
CSRF_COOKIE=csrf_token
REFRESH_TOKEN_TTL_DAYS=7

# Storage (S3-compatible)
BUCKET_ACCESS_ID=your-bucket-access-id
BUCKET_ACCESS_KEY=your-bucket-access-key

# Mercado Pago
# üß™ IMPORTANTE: Para desarrollo/testing usa las credenciales de PRUEBA
# Obt√©n tus credenciales en: https://www.mercadopago.com/developers/panel/app
# 
# ‚ö†Ô∏è NUNCA uses la misma cuenta para vendedor y comprador en pruebas
# Crea dos cuentas de prueba diferentes:
# - Una cuenta de vendedor (de donde sacas el TEST_ACCESS_TOKEN)
# - Una cuenta de comprador (para hacer los pagos de prueba)
#
# üìã Tarjetas de prueba: https://www.mercadopago.com/developers/es/docs/checkout-api/testing

# Token de PRUEBA (sandbox) - √ösalo en desarrollo
MERCADO_PAGO_TEST_ACCESS_TOKEN=TEST-1234567890-123456-abcdef1234567890abcdef1234567890-123456789

# Token de PRODUCCI√ìN - √ösalo SOLO en producci√≥n
MERCADO_PAGO_ACCESS_TOKEN=APP_USR-1234567890-123456-abcdef1234567890abcdef1234567890-123456789

# Public Key (opcional, para frontend)
MERCADO_PAGO_PUBLIC_KEY=APP_USR-12345678-1234-1234-1234-123456789012

# Webhook path
MERCADO_PAGO_WEBHOOK_PATH=/payments/webhook

# PayU Latam
# üß™ IMPORTANTE: Para desarrollo usa las credenciales de SANDBOX
# Obt√©n tus credenciales en: https://developers.payulatam.com/
# Panel de desarrollador: https://merchants.payulatam.com/ (despu√©s de crear cuenta)
#
# üìã Documentaci√≥n oficial:
# - Integraci√≥n: https://developers.payulatam.com/latam/es/docs/getting-started.html
# - Tarjetas de prueba: https://developers.payulatam.com/latam/es/docs/getting-started/test-your-solution.html
#
# üîë Credenciales de prueba para Colombia:
# API Key: Obtener del panel de desarrollador en modo "Pruebas"
# API Login: Obtener del panel de desarrollador en modo "Pruebas"
# Merchant ID: ID de tu comercio (visible en el panel)
# Account ID: ID espec√≠fico de la cuenta de Colombia (visible en el panel)
#
# üí≥ Tarjetas de prueba comunes para Colombia:
# VISA (APRO): 4111111111111111, CVV: 123, Exp: 12/2030
# MASTERCARD (APRO): 5411111111111111, CVV: 123, Exp: 12/2030
# AMEX (APRO): 371111111111111, CVV: 1234, Exp: 12/2030
# VISA (DECLINED): 4097440000000004, CVV: 123, Exp: 12/2030
#
# ‚ö†Ô∏è IMPORTANTE: En modo sandbox, el pago se procesa directamente sin formulario web

# API Key de PayU (modo sandbox)
PAYU_API_KEY=4Vj8eK4rloUd272L48hsrarnUA

# API Login de PayU (modo sandbox)
PAYU_API_LOGIN=pRRXKOl8ikMmt9u

# ID del comercio en PayU
PAYU_MERCHANT_ID=508029

# ID de la cuenta de PayU (espec√≠fico por pa√≠s, ej: Colombia)
PAYU_ACCOUNT_ID=512321

# URL de la API de PayU (sandbox)
PAYU_SANDBOX_URL=https://sandbox.api.payulatam.com/payments-api/4.0/service.cgi

# Modo de prueba (true para sandbox, false para producci√≥n)
PAYU_TEST=true

# Wompi (Colombia)
# üß™ IMPORTANTE: Para desarrollo usa las credenciales de SANDBOX
# Obt√©n tus credenciales en: https://comercios.wompi.co
# Panel de desarrollador: https://comercios.wompi.co/developers
#
# üìã Documentaci√≥n oficial:
# - Integraci√≥n: https://docs.wompi.co/
# - Widget Checkout: https://docs.wompi.co/docs/widget-checkout-1
# - API Reference: https://docs.wompi.co/docs/api-reference
#
# üîë Credenciales:
# Public Key: √ösala en el frontend para el widget (pub_test_xxx para sandbox, pub_prod_xxx para prod)
# Private Key: √ösala en el backend para crear transacciones (prv_test_xxx para sandbox, prv_prod_xxx para prod)
# Events Secret: √ösalo para validar webhooks (test_events_xxx para sandbox, prod_events_xxx para prod)
#
# üí≥ Tarjetas de prueba para Colombia (Sandbox):
# VISA (APROBADA): 4242424242424242, CVV: 123, Exp: 12/30
# VISA (RECHAZADA): 4111111111111111, CVV: 123, Exp: 12/30
# MASTERCARD (APROBADA): 5555555555554444, CVV: 123, Exp: 12/30
#
# üåê URLs importantes:
# Sandbox API: https://sandbox.wompi.co/v1
# Production API: https://production.wompi.co/v1
# Widget Script: https://checkout.wompi.co/widget.js
#
# üì¨ Webhooks:
# Configura la URL del webhook en el panel de Wompi
# Ejemplo: https://tudominio.com/api/wompi/webhook

# Public Key de Wompi (para frontend)
WOMPI_PUBLIC_KEY=pub_test_your_public_key_here

# Private Key de Wompi (para backend - crear transacciones)
WOMPI_PRIVATE_KEY=prv_test_your_private_key_here

# URL de la API de Wompi (sandbox o producci√≥n)
WOMPI_API_URL=https://sandbox.wompi.co/v1

# URL de redirecci√≥n despu√©s del pago
WOMPI_REDIRECT_URL=http://localhost:3010/wompi/callback

# Secret para validar firma de webhooks y generar firma de integridad del Widget
# ‚ö†Ô∏è IMPORTANTE: Este NO es una URL, es un string secreto que obtienes del panel de Wompi
# Tambi√©n se llama "Integrity Secret" en el panel de Wompi
# Ejemplo: test_events_xxxxxxxxxxxxx (para sandbox)
# Ejemplo: prod_events_xxxxxxxxxxxxx (para producci√≥n)
# 
# ¬øD√≥nde obtenerlo?
# 1. Inicia sesi√≥n en https://comercios.wompi.co
# 2. Ve a Developers ‚Üí Events (Webhooks)
# 3. Copia el "Events Secret" o "Integrity Secret"
WOMPI_EVENTS_SECRET=test_events_your_secret_here

# Logging
LOG_LEVEL=info
